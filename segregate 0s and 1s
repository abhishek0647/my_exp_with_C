//  
//Segregate 0s and 1s in an array


//You are given an array of 0s and 1s in random order.
//Segregate 0s on left side and 1s on right side of the array.
//Traverse array only once
//


#include<stdio.h>
 
/*Function to put all 0s on left and all 1s on right*/
void segregate0and1(int arr[], int size)
{
	/* Initialize left and right indexes */
	int left = 0, right = size-1;    
 
	while(left < right)
	{
    	/* Increment left index while we see 0 at left */
    	while(arr[left] == 0 && left < right)
        	left++;
 
	    /* Decrement right index while we see 1 at right */
    	while(arr[right] == 1 && left < right)
     		right-- ;
 
    	/* If left is smaller than right then there is a 1 at left
      	and a 0 at right.  Exchange arr[left] and arr[right]*/
     	if(left < right)
     	{
       		arr[left] = 0;
       		arr[right] = 1;
       		left++;
       		right--;
     	}
  	}
}    
 
/* driver program to test */
int main()
{
	int i, arr_size;
	printf("\nEnter the size of the array\n");
	scanf("%d",&arr_size);
	
	int arr[arr_size];
	
	printf("\nEnter the elements of the array\n");
	for(i=0;i<arr_size;i++)
		scanf("%d",&arr[i]);
 
	segregate0and1(arr, arr_size);
 
	printf("array after segregation ");
	for(i = 0; i < arr_size; i++)
  		printf("%d ", arr[i]);
 
	getchar();
	return 0;
}
