//
//Inversion Count for an array indicates â€“ how far (or close) the array is from being sorted.
//If array is already sorted then inversion count is 0.
//If array is sorted in reverse order that inversion count is the maximum.
//Formally speaking, two elements a[i] and a[j] form an inversion if a[i] > a[j] and i < j

//Example:
//The sequence 2, 4, 1, 3, 5 has three inversions (2, 1), (4, 1), (4, 3).
//

#include<stdio.h>
#include<conio.h>

int main()
{
  int n;
	printf("\nEnter the size of the array\n");
	scanf("%d",&n);
	int a[n];
	printf("\nEnter the elements of the array\n");
	int i;
	for(i=0;i<n;i++)
		scanf("%d",&a[i]);
	
	int inversions=0,j;
	for(i=0;i<n-1;i++)
		for(j=i+1;j<n;j++)
		{
			if(a[i] > a[j])
				inversions++;
		}
	
	printf("\nThe number of inversions are %d\n",inversions);
	
	return 0;
}
