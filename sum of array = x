//Given an array A[] and a number x, check for pair in A[] with sum as x
//
//Write a C program that, given an array A[] of n numbers and another number x, 
//determines whether or not there exist two elements in S whose sum is exactly x.
//
#include<stdio.h>
#include<conio.h>

/* FOLLOWING FUNCTIONS ARE ONLY FOR SORTING
    PURPOSE */
void exchange(int *a, int *b) //for swapping out the out of place values
{
    int temp;
    temp = *a;
    *a   = *b;
    *b   = temp;
}
 
int partition(int A[], int si, int ei) //for partitioning the given array for sorting purpose
{
    int x = A[ei];
    int i = (si - 1);
    int j;
 
    for (j = si; j <= ei - 1; j++)
    {
        if(A[j] <= x)
        {
            i++;
            exchange(&A[i], &A[j]);
        }
    }
    exchange (&A[i + 1], &A[ei]);
    return (i + 1);
}
 
/* Implementation of Quick Sort
A[] --> Array to be sorted
si  --> Starting index
ei  --> Ending index
*/
void quickSort(int A[], int si, int ei)
{
    int pi;    /* Partitioning index */
    if(si < ei)
    {
        pi = partition(A, si, ei);
        quickSort(A, si, pi - 1);
        quickSort(A, pi + 1, ei);
    }
}

int main()
{
  int i,n,x;
	
	printf("\nEnter the number of elements in the array\n");
	scanf("%d",&n);
	int my_array[n];
	printf("\nEnter the elements of the array\n");
	for(i=0;i<n;i++)
		scanf("%d",&my_array[i]);
	
	printf("\nEnter the value of x\n");
	scanf("%d",&x);
	printf("\nx = %d\n",x);
	
	quickSort(my_array,0,n-1);
	int l,r;
	l=0;
	r=n-1;
	
	while(l<r)
	{
		if (my_array[l] + my_array[r] == x)
		{
			printf("\nThe two elements are %d and %d",my_array[l],my_array[r]);
			return 1;
		}
		else if(my_array[l] + my_array[r] < x)
			l++;
		else
			r--;
	}
	printf("\nNo such two elements found whose sum is equal to %d\n",x);
	return 0;
}	
